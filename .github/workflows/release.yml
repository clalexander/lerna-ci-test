name: Release
on:
  push:
    branches:
      - main
      - next
      - beta
      - "*.x"

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm ci
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Build
        run: npx lerna run build
      - name: Lint
        run: npx lerna run lint
      - name: Test
        run: npx lerna run test
      - name: Configure Git User
        run: |
          git config --global user.email "test@email.com"
          git config --global user.name "@$GITHUB_ACTOR"
      - name: Add Unstaged Changes
        run: git add .
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          # npx lerna publish from-package --yes --conventional-graduate
        run: npx lerna version --yes --conventional-graduate
  rebase:
    name: Rebase
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: release
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Get Current PR
        uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: PR
      - name: Rebase
        uses: cirrus-actions/rebase@1.8
        if: ${{ steps.PR.outputs.pr_found == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ steps.PR.outputs.number }}
      